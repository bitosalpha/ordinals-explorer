{"ast":null,"code":"import { Buffer } from \"buffer\";\nimport { message } from \"antd\";\nexport function sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\nexport function stringToHex(stringToEncode) {\n  return Buffer.from(stringToEncode).toString('hex');\n}\nexport function isTicketValid(ticket) {\n  return Buffer.from(ticket).length === 4;\n}\nexport function handleError(e) {\n  message.error(e && e.message || e);\n}","map":{"version":3,"names":["Buffer","message","sleep","ms","Promise","resolve","setTimeout","stringToHex","stringToEncode","from","toString","isTicketValid","ticket","length","handleError","e","error"],"sources":["C:/unisat-dev-support/brc20-market-demo/src/utils/utils.ts"],"sourcesContent":["import {Buffer} from \"buffer\";\r\nimport {message} from \"antd\";\r\n\r\nexport function sleep(ms: number) {\r\n    return new Promise((resolve) => setTimeout(resolve, ms));\r\n}\r\n\r\nexport function stringToHex(stringToEncode: string) {\r\n    return Buffer.from(stringToEncode).toString('hex')\r\n}\r\n\r\nexport function isTicketValid(ticket: string) {\r\n    return Buffer.from(ticket).length === 4\r\n}\r\n\r\nexport function handleError(e: any) {\r\n    message.error((e && e.message) || e)\r\n}"],"mappings":"AAAA,SAAQA,MAAM,QAAO,QAAQ;AAC7B,SAAQC,OAAO,QAAO,MAAM;AAE5B,OAAO,SAASC,KAAKA,CAACC,EAAU,EAAE;EAC9B,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAKC,UAAU,CAACD,OAAO,EAAEF,EAAE,CAAC,CAAC;AAC5D;AAEA,OAAO,SAASI,WAAWA,CAACC,cAAsB,EAAE;EAChD,OAAOR,MAAM,CAACS,IAAI,CAACD,cAAc,CAAC,CAACE,QAAQ,CAAC,KAAK,CAAC;AACtD;AAEA,OAAO,SAASC,aAAaA,CAACC,MAAc,EAAE;EAC1C,OAAOZ,MAAM,CAACS,IAAI,CAACG,MAAM,CAAC,CAACC,MAAM,KAAK,CAAC;AAC3C;AAEA,OAAO,SAASC,WAAWA,CAACC,CAAM,EAAE;EAChCd,OAAO,CAACe,KAAK,CAAED,CAAC,IAAIA,CAAC,CAACd,OAAO,IAAKc,CAAC,CAAC;AACxC"},"metadata":{},"sourceType":"module","externalDependencies":[]}