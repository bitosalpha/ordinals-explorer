{"ast":null,"code":"import { handleError } from \"./utils\";\nexport const unisatUtils = {\n  async getAccounts() {\n    try {\n      const accounts = await window.unisat.getAccounts();\n      if (accounts && accounts.length > 0) {\n        return accounts[0];\n      }\n    } catch (e) {\n      handleError(e);\n    }\n    return '';\n  },\n  async requestAccounts() {\n    try {\n      const accounts = await window.unisat.requestAccounts();\n      if (accounts && accounts.length > 0) {\n        return accounts[0];\n      }\n    } catch (e) {\n      handleError(e);\n    }\n    return '';\n  },\n  signMessage(message, type) {\n    return window.unisat.signMessage(message, type);\n  },\n  signPsbt(psbt) {\n    return window.unisat.signPsbt(psbt, {\n      autoFinalized: false\n    });\n  },\n  getNetwork() {\n    return window.unisat.getNetwork();\n  },\n  switchNetwork(network) {\n    return window.unisat.switchNetwork(network);\n  },\n  async checkNetwork(network) {\n    if (network !== (await this.getNetwork())) {\n      await this.switchNetwork(network);\n    }\n  },\n  inscribeTransfer(tick, amount) {\n    return window.unisat.inscribeTransfer(tick, amount);\n  },\n  getPublicKey() {\n    return window.unisat.getPublicKey();\n  }\n};","map":{"version":3,"names":["handleError","unisatUtils","getAccounts","accounts","window","unisat","length","e","requestAccounts","signMessage","message","type","signPsbt","psbt","autoFinalized","getNetwork","switchNetwork","network","checkNetwork","inscribeTransfer","tick","amount","getPublicKey"],"sources":["C:/unisat-dev-support/brc20-market-demo/src/utils/unisatUtils.ts"],"sourcesContent":["import {handleError} from \"./utils\";\r\n\r\nexport const unisatUtils = {\r\n    async getAccounts() {\r\n        try {\r\n            const accounts = await window.unisat.getAccounts();\r\n            if (accounts && accounts.length > 0) {\r\n                return accounts[0];\r\n            }\r\n        } catch (e: any) {\r\n            handleError(e);\r\n        }\r\n        return '';\r\n    },\r\n    async requestAccounts() {\r\n        try {\r\n            const accounts = await window.unisat.requestAccounts();\r\n            if (accounts && accounts.length > 0) {\r\n                return accounts[0];\r\n            }\r\n        } catch (e: any) {\r\n            handleError(e);\r\n        }\r\n        return '';\r\n    },\r\n    signMessage(message: string, type?: string) {\r\n        return window.unisat.signMessage(message, type);\r\n    },\r\n    signPsbt(psbt: string) {\r\n        return window.unisat.signPsbt(psbt, {autoFinalized: false});\r\n    },\r\n    getNetwork(): Promise<string> {\r\n        return window.unisat.getNetwork();\r\n    },\r\n    switchNetwork(network: string): Promise<void> {\r\n        return window.unisat.switchNetwork(network);\r\n    },\r\n\r\n    async checkNetwork(network: string): Promise<void> {\r\n        if (network !== await this.getNetwork()) {\r\n            await this.switchNetwork(network);\r\n        }\r\n    },\r\n    inscribeTransfer(tick: string, amount?: number | string) {\r\n        return window.unisat.inscribeTransfer(tick, amount)\r\n    },\r\n    getPublicKey() {\r\n        return window.unisat.getPublicKey();\r\n    },\r\n\r\n}"],"mappings":"AAAA,SAAQA,WAAW,QAAO,SAAS;AAEnC,OAAO,MAAMC,WAAW,GAAG;EACvB,MAAMC,WAAWA,CAAA,EAAG;IAChB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,MAAM,CAACC,MAAM,CAACH,WAAW,CAAC,CAAC;MAClD,IAAIC,QAAQ,IAAIA,QAAQ,CAACG,MAAM,GAAG,CAAC,EAAE;QACjC,OAAOH,QAAQ,CAAC,CAAC,CAAC;MACtB;IACJ,CAAC,CAAC,OAAOI,CAAM,EAAE;MACbP,WAAW,CAACO,CAAC,CAAC;IAClB;IACA,OAAO,EAAE;EACb,CAAC;EACD,MAAMC,eAAeA,CAAA,EAAG;IACpB,IAAI;MACA,MAAML,QAAQ,GAAG,MAAMC,MAAM,CAACC,MAAM,CAACG,eAAe,CAAC,CAAC;MACtD,IAAIL,QAAQ,IAAIA,QAAQ,CAACG,MAAM,GAAG,CAAC,EAAE;QACjC,OAAOH,QAAQ,CAAC,CAAC,CAAC;MACtB;IACJ,CAAC,CAAC,OAAOI,CAAM,EAAE;MACbP,WAAW,CAACO,CAAC,CAAC;IAClB;IACA,OAAO,EAAE;EACb,CAAC;EACDE,WAAWA,CAACC,OAAe,EAAEC,IAAa,EAAE;IACxC,OAAOP,MAAM,CAACC,MAAM,CAACI,WAAW,CAACC,OAAO,EAAEC,IAAI,CAAC;EACnD,CAAC;EACDC,QAAQA,CAACC,IAAY,EAAE;IACnB,OAAOT,MAAM,CAACC,MAAM,CAACO,QAAQ,CAACC,IAAI,EAAE;MAACC,aAAa,EAAE;IAAK,CAAC,CAAC;EAC/D,CAAC;EACDC,UAAUA,CAAA,EAAoB;IAC1B,OAAOX,MAAM,CAACC,MAAM,CAACU,UAAU,CAAC,CAAC;EACrC,CAAC;EACDC,aAAaA,CAACC,OAAe,EAAiB;IAC1C,OAAOb,MAAM,CAACC,MAAM,CAACW,aAAa,CAACC,OAAO,CAAC;EAC/C,CAAC;EAED,MAAMC,YAAYA,CAACD,OAAe,EAAiB;IAC/C,IAAIA,OAAO,MAAK,MAAM,IAAI,CAACF,UAAU,CAAC,CAAC,GAAE;MACrC,MAAM,IAAI,CAACC,aAAa,CAACC,OAAO,CAAC;IACrC;EACJ,CAAC;EACDE,gBAAgBA,CAACC,IAAY,EAAEC,MAAwB,EAAE;IACrD,OAAOjB,MAAM,CAACC,MAAM,CAACc,gBAAgB,CAACC,IAAI,EAAEC,MAAM,CAAC;EACvD,CAAC;EACDC,YAAYA,CAAA,EAAG;IACX,OAAOlB,MAAM,CAACC,MAAM,CAACiB,YAAY,CAAC,CAAC;EACvC;AAEJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}