{"ast":null,"code":"import axios from \"axios\";\nimport { networkUtils } from \"./networkUtils\";\nlet apiKey = localStorage.getItem('apiKey') || '';\nexport function setApiKey(key) {\n  apiKey = key;\n}\nfunction createApi(baseURL) {\n  const api = axios.create({\n    baseURL,\n    timeout: 10000,\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  api.interceptors.request.use(config => {\n    if (!apiKey) {\n      throw new Error(\"input apiKey and reload page\");\n    }\n    config.headers.Authorization = `Bearer ${apiKey}`;\n    return config;\n  });\n  return api;\n}\nconst mainnetApi = createApi(\"https://open-api.unisat.io\");\nconst testnetApi = createApi(\"https://open-api-testnet.unisat.io\");\nfunction getApi() {\n  return networkUtils.isTestnet() ? testnetApi : mainnetApi;\n}\nexport const get = async (url, params) => {\n  const res = await getApi().get(url, {\n    params\n  });\n  if (res.status !== 200) {\n    throw new Error(res.statusText);\n  }\n  const responseData = res.data;\n  if (responseData.code !== 0) {\n    throw new Error(responseData.msg);\n  }\n  return responseData.data;\n};\nexport const post = async (url, data) => {\n  const res = await getApi().post(url, data);\n  if (res.status !== 200) {\n    throw new Error(res.statusText);\n  }\n  const responseData = res.data;\n  if (responseData.code !== 0) {\n    throw new Error(responseData.msg);\n  }\n  return responseData.data;\n};","map":{"version":3,"names":["axios","networkUtils","apiKey","localStorage","getItem","setApiKey","key","createApi","baseURL","api","create","timeout","headers","interceptors","request","use","config","Error","Authorization","mainnetApi","testnetApi","getApi","isTestnet","get","url","params","res","status","statusText","responseData","data","code","msg","post"],"sources":["C:/unisat-dev-support/brc20-market-demo/src/utils/httpUtils.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport {networkUtils} from \"./networkUtils\";\r\n\r\nlet apiKey = localStorage.getItem('apiKey') || '';\r\n\r\nexport function setApiKey(key: string) {\r\n    apiKey = key;\r\n}\r\n\r\nfunction createApi(baseURL: string) {\r\n    const api = axios.create({\r\n        baseURL,\r\n        timeout: 10000,\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    })\r\n\r\n    api.interceptors.request.use((config) => {\r\n        if (!apiKey) {\r\n            throw new Error(\"input apiKey and reload page\");\r\n        }\r\n        config.headers.Authorization = `Bearer ${apiKey}`;\r\n        return config;\r\n    });\r\n    return api;\r\n}\r\n\r\nconst mainnetApi = createApi(\"https://open-api.unisat.io\");\r\nconst testnetApi = createApi(\"https://open-api-testnet.unisat.io\");\r\n\r\nfunction getApi() {\r\n    return networkUtils.isTestnet() ? testnetApi : mainnetApi;\r\n}\r\n\r\n\r\nexport const get = async (url: string, params?: any) => {\r\n    const res = await getApi().get(url, {params});\r\n    if (res.status !== 200) {\r\n        throw new Error(res.statusText);\r\n    }\r\n\r\n    const responseData = res.data;\r\n\r\n    if (responseData.code !== 0) {\r\n        throw new Error(responseData.msg);\r\n    }\r\n    return responseData.data;\r\n};\r\n\r\nexport const post = async (url: string, data?: any) => {\r\n    const res = await getApi().post(url, data,);\r\n    if (res.status !== 200) {\r\n        throw new Error(res.statusText);\r\n    }\r\n\r\n    const responseData = res.data;\r\n\r\n    if (responseData.code !== 0) {\r\n        throw new Error(responseData.msg);\r\n    }\r\n\r\n    return responseData.data;\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,YAAY,QAAO,gBAAgB;AAE3C,IAAIC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE;AAEjD,OAAO,SAASC,SAASA,CAACC,GAAW,EAAE;EACnCJ,MAAM,GAAGI,GAAG;AAChB;AAEA,SAASC,SAASA,CAACC,OAAe,EAAE;EAChC,MAAMC,GAAG,GAAGT,KAAK,CAACU,MAAM,CAAC;IACrBF,OAAO;IACPG,OAAO,EAAE,KAAK;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB;EACJ,CAAC,CAAC;EAEFH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;IACrC,IAAI,CAACd,MAAM,EAAE;MACT,MAAM,IAAIe,KAAK,CAAC,8BAA8B,CAAC;IACnD;IACAD,MAAM,CAACJ,OAAO,CAACM,aAAa,GAAI,UAAShB,MAAO,EAAC;IACjD,OAAOc,MAAM;EACjB,CAAC,CAAC;EACF,OAAOP,GAAG;AACd;AAEA,MAAMU,UAAU,GAAGZ,SAAS,CAAC,4BAA4B,CAAC;AAC1D,MAAMa,UAAU,GAAGb,SAAS,CAAC,oCAAoC,CAAC;AAElE,SAASc,MAAMA,CAAA,EAAG;EACd,OAAOpB,YAAY,CAACqB,SAAS,CAAC,CAAC,GAAGF,UAAU,GAAGD,UAAU;AAC7D;AAGA,OAAO,MAAMI,GAAG,GAAG,MAAAA,CAAOC,GAAW,EAAEC,MAAY,KAAK;EACpD,MAAMC,GAAG,GAAG,MAAML,MAAM,CAAC,CAAC,CAACE,GAAG,CAACC,GAAG,EAAE;IAACC;EAAM,CAAC,CAAC;EAC7C,IAAIC,GAAG,CAACC,MAAM,KAAK,GAAG,EAAE;IACpB,MAAM,IAAIV,KAAK,CAACS,GAAG,CAACE,UAAU,CAAC;EACnC;EAEA,MAAMC,YAAY,GAAGH,GAAG,CAACI,IAAI;EAE7B,IAAID,YAAY,CAACE,IAAI,KAAK,CAAC,EAAE;IACzB,MAAM,IAAId,KAAK,CAACY,YAAY,CAACG,GAAG,CAAC;EACrC;EACA,OAAOH,YAAY,CAACC,IAAI;AAC5B,CAAC;AAED,OAAO,MAAMG,IAAI,GAAG,MAAAA,CAAOT,GAAW,EAAEM,IAAU,KAAK;EACnD,MAAMJ,GAAG,GAAG,MAAML,MAAM,CAAC,CAAC,CAACY,IAAI,CAACT,GAAG,EAAEM,IAAK,CAAC;EAC3C,IAAIJ,GAAG,CAACC,MAAM,KAAK,GAAG,EAAE;IACpB,MAAM,IAAIV,KAAK,CAACS,GAAG,CAACE,UAAU,CAAC;EACnC;EAEA,MAAMC,YAAY,GAAGH,GAAG,CAACI,IAAI;EAE7B,IAAID,YAAY,CAACE,IAAI,KAAK,CAAC,EAAE;IACzB,MAAM,IAAId,KAAK,CAACY,YAAY,CAACG,GAAG,CAAC;EACrC;EAEA,OAAOH,YAAY,CAACC,IAAI;AAC5B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}