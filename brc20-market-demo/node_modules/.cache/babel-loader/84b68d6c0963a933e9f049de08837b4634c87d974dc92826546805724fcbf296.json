{"ast":null,"code":"import { get } from \"./httpUtils\";\nimport { stringToHex } from \"./utils\";\nexport const brc20Api = {\n  summary({\n    address,\n    limit = 20,\n    start = 0\n  }) {\n    return get(`/v1/indexer/address/${address}/brc20/summary`, {\n      limit,\n      start\n    });\n  },\n  getAddressTransferable({\n    address,\n    tick,\n    start = 0,\n    limit = 512\n  }) {\n    return get(`/v1/indexer/address/${address}/brc20/${stringToHex(tick)}/transferable-inscriptions`, {\n      limit,\n      start\n    });\n  }\n};","map":{"version":3,"names":["get","stringToHex","brc20Api","summary","address","limit","start","getAddressTransferable","tick"],"sources":["C:/unisat-dev-support/brc20-market-demo/src/utils/brc20Api.ts"],"sourcesContent":["import {get} from \"./httpUtils\";\r\nimport {stringToHex} from \"./utils\";\r\n\r\nexport const brc20Api = {\r\n    summary({\r\n                address, limit = 20, start = 0,\r\n            }: { address: string, limit?: number, start?: number }): Promise<{\r\n        total: number,\r\n        start: number,\r\n        height: number,\r\n        detail: AddressBrc20Balance[]\r\n    }> {\r\n        return get(`/v1/indexer/address/${address}/brc20/summary`, {limit, start})\r\n    },\r\n\r\n    getAddressTransferable({\r\n                               address, tick, start = 0, limit = 512,\r\n                           }: {\r\n        address: string,\r\n        tick: string,\r\n        start?: number,\r\n        limit?: number\r\n    }): Promise<Brc20AddressTransferable> {\r\n        return get(`/v1/indexer/address/${address}/brc20/${stringToHex(tick)}/transferable-inscriptions`, {\r\n            limit,\r\n            start,\r\n        })\r\n    },\r\n}\r\n\r\n\r\nexport type AddressBrc20Balance = {\r\n    ticker: string\r\n    overallBalance: string   // transferableBalance + availableBalance\r\n    transferableBalance: string\r\n    availableBalance: string\r\n}\r\n\r\n\r\nexport type Brc20Data = {\r\n    amt: string,\r\n    decimal: string,\r\n    lim: string,\r\n    max: string,\r\n    minted: string,\r\n    op: string,\r\n    tick: string,\r\n    to: string\r\n}\r\nexport type Brc20InscriptionsItem = {\r\n    data: Brc20Data,\r\n    inscriptionId: string,\r\n    inscriptionNumber: number,\r\n    confirmations: number,\r\n    isPutOn?: boolean,\r\n};\r\n\r\nexport type Brc20AddressTransferable = {\r\n    start: number,\r\n    total: number,\r\n    detail: Brc20InscriptionsItem[]\r\n};"],"mappings":"AAAA,SAAQA,GAAG,QAAO,aAAa;AAC/B,SAAQC,WAAW,QAAO,SAAS;AAEnC,OAAO,MAAMC,QAAQ,GAAG;EACpBC,OAAOA,CAAC;IACIC,OAAO;IAAEC,KAAK,GAAG,EAAE;IAAEC,KAAK,GAAG;EACoB,CAAC,EAK3D;IACC,OAAON,GAAG,CAAE,uBAAsBI,OAAQ,gBAAe,EAAE;MAACC,KAAK;MAAEC;IAAK,CAAC,CAAC;EAC9E,CAAC;EAEDC,sBAAsBA,CAAC;IACIH,OAAO;IAAEI,IAAI;IAAEF,KAAK,GAAG,CAAC;IAAED,KAAK,GAAG;EAM7D,CAAC,EAAqC;IAClC,OAAOL,GAAG,CAAE,uBAAsBI,OAAQ,UAASH,WAAW,CAACO,IAAI,CAAE,4BAA2B,EAAE;MAC9FH,KAAK;MACLC;IACJ,CAAC,CAAC;EACN;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}