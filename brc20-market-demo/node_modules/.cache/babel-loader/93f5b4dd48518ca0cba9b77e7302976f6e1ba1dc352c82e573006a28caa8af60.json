{"ast":null,"code":"var _jsxFileName = \"C:\\\\unisat-dev-support\\\\brc20-market-demo\\\\src\\\\provider\\\\NetworkProvider.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { NetworkType } from \"../utils/networkUtils\";\nimport { createContext, useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NetworkContext = /*#__PURE__*/createContext({\n  network: NetworkType.testnet,\n  setNetwork: () => {}\n});\nexport function useNetwork() {\n  _s();\n  const context = useContext(NetworkContext);\n  if (!context) {\n    throw Error('Feature flag hooks can only be used by children of NetworkProvider.');\n  } else {\n    return context;\n  }\n}\n_s(useNetwork, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default function NetworkProvider({\n  children\n}) {\n  _s2();\n  const [network, setNetwork] = useState(NetworkType.testnet);\n  return /*#__PURE__*/_jsxDEV(NetworkContext.Provider, {\n    value: {\n      network,\n      setNetwork\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 12\n  }, this);\n}\n_s2(NetworkProvider, \"zKOChrxeqr+rxlbbwk4OgK5k8rA=\");\n_c = NetworkProvider;\nvar _c;\n$RefreshReg$(_c, \"NetworkProvider\");","map":{"version":3,"names":["NetworkType","createContext","useContext","useState","jsxDEV","_jsxDEV","NetworkContext","network","testnet","setNetwork","useNetwork","_s","context","Error","NetworkProvider","children","_s2","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/unisat-dev-support/brc20-market-demo/src/provider/NetworkProvider.tsx"],"sourcesContent":["import {NetworkType} from \"../utils/networkUtils\";\r\nimport {createContext, ReactNode, useContext, useState} from \"react\";\r\n\r\ninterface NetworkContextType {\r\n    network: NetworkType;\r\n    setNetwork: (network: NetworkType) => void;\r\n}\r\n\r\nconst NetworkContext = createContext<NetworkContextType>({\r\n    network: NetworkType.testnet,\r\n    setNetwork: () => {}\r\n})\r\n\r\nexport function useNetwork() {\r\n    const context = useContext(NetworkContext);\r\n    if (!context) {\r\n        throw Error('Feature flag hooks can only be used by children of NetworkProvider.');\r\n    } else {\r\n        return context;\r\n    }\r\n}\r\n\r\nexport default function NetworkProvider({children}: {\r\n    children: ReactNode\r\n}) {\r\n    const [network, setNetwork] = useState(NetworkType.testnet)\r\n\r\n    return <NetworkContext.Provider value={{\r\n        network,\r\n        setNetwork\r\n    }}>\r\n        {children}\r\n    </NetworkContext.Provider>\r\n}"],"mappings":";;;AAAA,SAAQA,WAAW,QAAO,uBAAuB;AACjD,SAAQC,aAAa,EAAaC,UAAU,EAAEC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOrE,MAAMC,cAAc,gBAAGL,aAAa,CAAqB;EACrDM,OAAO,EAAEP,WAAW,CAACQ,OAAO;EAC5BC,UAAU,EAAEA,CAAA,KAAM,CAAC;AACvB,CAAC,CAAC;AAEF,OAAO,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAMC,OAAO,GAAGV,UAAU,CAACI,cAAc,CAAC;EAC1C,IAAI,CAACM,OAAO,EAAE;IACV,MAAMC,KAAK,CAAC,qEAAqE,CAAC;EACtF,CAAC,MAAM;IACH,OAAOD,OAAO;EAClB;AACJ;AAACD,EAAA,CAPeD,UAAU;AAS1B,eAAe,SAASI,eAAeA,CAAC;EAACC;AAEzC,CAAC,EAAE;EAAAC,GAAA;EACC,MAAM,CAACT,OAAO,EAAEE,UAAU,CAAC,GAAGN,QAAQ,CAACH,WAAW,CAACQ,OAAO,CAAC;EAE3D,oBAAOH,OAAA,CAACC,cAAc,CAACW,QAAQ;IAACC,KAAK,EAAE;MACnCX,OAAO;MACPE;IACJ,CAAE;IAAAM,QAAA,EACGA;EAAQ;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAC9B;AAACN,GAAA,CAXuBF,eAAe;AAAAS,EAAA,GAAfT,eAAe;AAAA,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}