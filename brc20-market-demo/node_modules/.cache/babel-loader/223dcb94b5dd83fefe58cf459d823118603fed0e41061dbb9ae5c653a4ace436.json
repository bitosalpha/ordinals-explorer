{"ast":null,"code":"import { post } from \"./httpUtils\";\nexport const marketApi = {\n  listBrc20(req) {\n    return post('/v3/market/brc20/auction/list', req);\n  },\n  createPutOn(req) {\n    return post('/v3/market/brc20/auction/create_put_on', req);\n  },\n  confirmPutOn(req) {\n    return post('/v3/market/brc20/auction/confirm_put_on', req);\n  },\n  createBidPrepare(req) {\n    return post('/v3/market/brc20/auction/create_bid_prepare', req);\n  },\n  createBid(req) {\n    return post('/v3/market/brc20/auction/create_bid', req);\n  },\n  confirmBid(req) {\n    return post('/v3/market/brc20/auction/confirm_bid', req);\n  },\n  createPutOff(req) {\n    return post('/v3/market/brc20/auction/create_put_off', req);\n  },\n  confirmPutOff(req) {\n    return post('/v3/market/brc20/auction/confirm_put_off', req);\n  }\n};\nexport let InscriptionType = /*#__PURE__*/function (InscriptionType) {\n  InscriptionType[\"brc20\"] = \"brc20\";\n  InscriptionType[\"domain\"] = \"domain\";\n  InscriptionType[\"collection\"] = \"collection\";\n  InscriptionType[\"arc20\"] = \"arc20\";\n  return InscriptionType;\n}({});","map":{"version":3,"names":["post","marketApi","listBrc20","req","createPutOn","confirmPutOn","createBidPrepare","createBid","confirmBid","createPutOff","confirmPutOff","InscriptionType"],"sources":["C:/unisat-dev-support/brc20-market-demo/src/utils/marketApi.ts"],"sourcesContent":["import {post} from \"./httpUtils\";\r\n\r\nexport const marketApi = {\r\n    listBrc20(req: ListReq): Promise<BRC20ListRes> {\r\n        return post('/v3/market/brc20/auction/list', req,)\r\n    },\r\n\r\n    createPutOn(req: CreatePutOnReq): Promise<CreatePutOnRes> {\r\n        return post('/v3/market/brc20/auction/create_put_on', req);\r\n    },\r\n    confirmPutOn(req: ConfirmPutOnReq): Promise<ConfirmPutOnRes> {\r\n        return post('/v3/market/brc20/auction/confirm_put_on', req);\r\n    },\r\n\r\n    createBidPrepare(req: CreateBidPrepareReq): Promise<CreateBidPrepareRes> {\r\n        return post('/v3/market/brc20/auction/create_bid_prepare', req);\r\n    },\r\n    createBid(req: CreateBidReq): Promise<CreateBidRes> {\r\n        return post('/v3/market/brc20/auction/create_bid', req);\r\n    },\r\n    confirmBid(req: ConfirmBidReq): Promise<ConfirmBidRes> {\r\n        return post('/v3/market/brc20/auction/confirm_bid', req);\r\n    },\r\n    createPutOff(req: CreatePutOffReq): Promise<CreatePutOffRes> {\r\n        return post('/v3/market/brc20/auction/create_put_off', req);\r\n    },\r\n    confirmPutOff(req: ConfirmPutOffReq): Promise<ConfirmPutOffRes> {\r\n        return post('/v3/market/brc20/auction/confirm_put_off', req);\r\n    },\r\n}\r\n\r\n\r\nexport enum InscriptionType {\r\n    brc20 = \"brc20\",\r\n    domain = \"domain\",\r\n    collection = \"collection\",\r\n    arc20 = \"arc20\",\r\n}\r\n\r\n\r\nexport type ListReqFilter = {\r\n    address?: string;\r\n    nftConfirm?: boolean;\r\n    minPrice?: number;\r\n    maxPrice?: number;\r\n    isEnd?: boolean;\r\n\r\n    nftType?: InscriptionType;\r\n\r\n    // brc20\r\n    tick?: string;\r\n}\r\n\r\nexport type ListReq = {\r\n    filter: ListReqFilter;\r\n    sort: {\r\n        unitPrice?: -1 | 1;\r\n        onSaleTime?: -1 | 1;\r\n    };\r\n    start: number;\r\n    limit: number;\r\n};\r\n\r\n\r\nexport type ListItem = {\r\n    auctionId: string;\r\n    inscriptionId: string;\r\n    inscriptionName: string;\r\n    inscriptionNumber: number;\r\n    marketType: 'fixedPrice';\r\n    nftType: InscriptionType;\r\n    initPrice: number;\r\n    curPrice: number;\r\n    minBidPrice: number;\r\n    endTime: number;\r\n    address: string;\r\n    onSaleTime: number;\r\n    price: number;\r\n\r\n};\r\n\r\nexport type BRC20ListItem = ListItem & {\r\n    tick: string;\r\n    limit: number;\r\n    amount: number;\r\n    unitPrice: number;\r\n};\r\n\r\nexport type BRC20ListRes = {\r\n    list: BRC20ListItem[];\r\n    total: number;\r\n};\r\n\r\n\r\nexport type CreatePutOnReq = {\r\n    inscriptionId: string;\r\n    initPrice: string;\r\n    pubkey: string;\r\n    marketType: 'fixedPrice';\r\n    auctionTime?: number;\r\n    maxPrice?: number;\r\n    unitPrice?: string;\r\n    btcAddress?: string;\r\n    nftType: InscriptionType;\r\n};\r\n\r\nexport type CreatePutOnRes = {\r\n    auctionId: string;\r\n    psbt: string;\r\n    signIndexes: number[];\r\n};\r\n\r\nexport type ConfirmPutOnReq = {\r\n    auctionId: string;\r\n    psbt: string;\r\n    fromBase64?: boolean;\r\n};\r\n\r\nexport type ConfirmPutOnRes = {};\r\n\r\n\r\nexport type CreateBidPrepareReq = {\r\n    auctionId: string;\r\n    bidPrice: number;\r\n    address: string;\r\n    pubkey: string;\r\n};\r\n\r\nexport type CreateBidPrepareRes = {\r\n    serverFee: number;\r\n    serverReal: number;\r\n    serverFeeRate: number;\r\n    txSize: number;\r\n    nftValue: number;\r\n    feeRate: number;\r\n    discounts: {\r\n        name: string;\r\n        percent: number;\r\n    }[];\r\n    inscriptionCount: number;\r\n    availableBalance: number;\r\n};\r\n\r\n\r\nexport type CreateBidReq = {\r\n    auctionId: string;\r\n    bidPrice: number;\r\n    address: string;\r\n    pubkey: string;\r\n    feeRate?: number;\r\n    nftAddress?: string;\r\n    sign?: string;\r\n};\r\n\r\n\r\nexport type CreateBidRes = {\r\n    bidId: string;\r\n    psbtBid: string;\r\n    psbtBid2: string;\r\n    psbtSettle: string;\r\n\r\n    networkFee: number;\r\n    feeRate: number;\r\n    serverFee: number;\r\n    nftValue: number;\r\n\r\n    bidSignIndexes: number[];\r\n\r\n};\r\n\r\nexport type ConfirmBidReq = {\r\n    auctionId: string;\r\n    bidId: string;\r\n    psbtBid: string;\r\n    psbtBid2: string;\r\n    psbtSettle: string;\r\n    fromBase64?: boolean;\r\n\r\n};\r\n\r\nexport type ConfirmBidRes = {\r\n    txid: string;\r\n};\r\n\r\n\r\nexport type CreatePutOffReq = {\r\n    auctionId: string;\r\n    btcPubkey?: string;\r\n    nftAddress?: string;\r\n};\r\n\r\nexport type CreatePutOffRes = {\r\n    psbt: string;\r\n    btcSignIndexes: number[];\r\n    nftSignIndexes: number[];\r\n};\r\n\r\nexport type ConfirmPutOffReq = {\r\n    auctionId: string;\r\n    psbt: string;\r\n    fromBase64?: boolean;\r\n};\r\n\r\nexport type ConfirmPutOffRes = {\r\n    txid: string;\r\n};\r\n\r\n"],"mappings":"AAAA,SAAQA,IAAI,QAAO,aAAa;AAEhC,OAAO,MAAMC,SAAS,GAAG;EACrBC,SAASA,CAACC,GAAY,EAAyB;IAC3C,OAAOH,IAAI,CAAC,+BAA+B,EAAEG,GAAI,CAAC;EACtD,CAAC;EAEDC,WAAWA,CAACD,GAAmB,EAA2B;IACtD,OAAOH,IAAI,CAAC,wCAAwC,EAAEG,GAAG,CAAC;EAC9D,CAAC;EACDE,YAAYA,CAACF,GAAoB,EAA4B;IACzD,OAAOH,IAAI,CAAC,yCAAyC,EAAEG,GAAG,CAAC;EAC/D,CAAC;EAEDG,gBAAgBA,CAACH,GAAwB,EAAgC;IACrE,OAAOH,IAAI,CAAC,6CAA6C,EAAEG,GAAG,CAAC;EACnE,CAAC;EACDI,SAASA,CAACJ,GAAiB,EAAyB;IAChD,OAAOH,IAAI,CAAC,qCAAqC,EAAEG,GAAG,CAAC;EAC3D,CAAC;EACDK,UAAUA,CAACL,GAAkB,EAA0B;IACnD,OAAOH,IAAI,CAAC,sCAAsC,EAAEG,GAAG,CAAC;EAC5D,CAAC;EACDM,YAAYA,CAACN,GAAoB,EAA4B;IACzD,OAAOH,IAAI,CAAC,yCAAyC,EAAEG,GAAG,CAAC;EAC/D,CAAC;EACDO,aAAaA,CAACP,GAAqB,EAA6B;IAC5D,OAAOH,IAAI,CAAC,0CAA0C,EAAEG,GAAG,CAAC;EAChE;AACJ,CAAC;AAGD,WAAYQ,eAAe,0BAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAA,OAAfA,eAAe;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}